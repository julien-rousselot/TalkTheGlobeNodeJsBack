"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const mailerController_1 = require("../controllers/mailerController");
const authController_1 = require("../controllers/authController");
const auth_1 = require("../middlewares/auth");
const upload_1 = require("../middlewares/upload");
const stripeController_1 = require("../controllers/stripeController");
const suscribersController_1 = require("../controllers/suscribersController");
const materialController_1 = require("../controllers/materialController");
const router = (0, express_1.Router)();
router.post('/send-email', mailerController_1.sendEmail);
router.post('/send-suggestion', mailerController_1.sendSuggestion);
router.post('/login', authController_1.login);
router.post('/register', authController_1.register);
router.post('/subscribe-newsletter', suscribersController_1.SuscribeNewsletter);
router.get('/materials/resource', materialController_1.getFreeMaterials);
router.get('/material', auth_1.requireAdmin, materialController_1.getAllMaterials);
router.get('/materials/shop', materialController_1.getPaidMaterials);
router.get('/material/:id', materialController_1.getMaterialById);
router.post('/material', auth_1.authenticateToken, auth_1.requireAdmin, upload_1.upload.fields([{ name: 'cover', maxCount: 1 }, { name: 'pictures', maxCount: 10 }, { name: 'pdf', maxCount: 1 }]), materialController_1.createMaterial);
router.put('/material/:id', auth_1.authenticateToken, auth_1.requireAdmin, materialController_1.updateMaterial);
router.delete('/material/:id', auth_1.authenticateToken, auth_1.requireAdmin, materialController_1.deleteMaterial);
router.get("/download/:id", auth_1.authenticateToken, materialController_1.downloadMaterial);
// Cr√©ation paiement
router.post('/stripe/create-payment-intent', stripeController_1.createPaymentIntent);
router.post('/stripe/payment-session', stripeController_1.getPaymentSession);
exports.default = router;
